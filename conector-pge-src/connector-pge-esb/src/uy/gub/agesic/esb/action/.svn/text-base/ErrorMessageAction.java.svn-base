package uy.gub.agesic.esb.action;

import java.io.IOException;

import org.apache.log4j.Logger;
import org.jboss.soa.esb.ConfigurationException;
import org.jboss.soa.esb.actions.ActionLifecycleException;
import org.jboss.soa.esb.actions.ActionProcessingException;
import org.jboss.soa.esb.actions.StaticWiretap;
import org.jboss.soa.esb.helpers.ConfigTree;
import org.jboss.soa.esb.message.Message;
import org.jboss.soa.esb.services.registry.RegistryException;

import biz.ideasoft.soa.esb.util.SoapUtil;

public class ErrorMessageAction extends StaticWiretap {
	protected ConfigTree config;
	protected static Logger _logger = Logger.getLogger(ErrorMessageAction.class);
	private String actionInfo;

	public ErrorMessageAction(ConfigTree config) throws ConfigurationException, RegistryException {
		super(config);
		this.config = config;
		String action = config.getAttribute("action");
		ConfigTree configParent = config.getParent();
		String serviceName = configParent.getAttribute("service-name");
		String serviceCategory = configParent.getAttribute("service-category");
		actionInfo = "["+ serviceCategory + " - " + serviceName + " - " + action + "] ";
	}
	
	public Message process(Message message) throws ActionProcessingException {
		return message;
	}
	
    public void notifyError(Message message, final Throwable th) {
    	try {
			Message msg = message.copy();
		} catch (IOException e) {
			String error = actionInfo + e.getLocalizedMessage();
			_logger.error(error, e);			
		}
    }

	public void initialise() throws ActionLifecycleException {
		super.initialise();
	}

	public void destroy() throws ActionLifecycleException {
		super.destroy();
	}

}