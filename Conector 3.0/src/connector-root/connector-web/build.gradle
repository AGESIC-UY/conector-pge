apply plugin: 'java'
apply plugin: 'war'
apply plugin: 'org.akhikhl.gretty'
apply plugin: 'idea'
apply plugin: 'jacoco' //code coverage

def environment = System.properties['environment']
def tomcatHome = System.properties['tomcat.home']
def tomcatBin = tomcatHome + "/bin"
def tomcatDeployment = tomcatHome + '/webapps/'

def junitVersion = "4.12"
def jstlVersion = "1.2"
def hamcrestVersion = "1.3"
def servletApiVersion = "3.1"
def fileupload = "1.3.3"

task wrapper(type: Wrapper) {
    gradleVersion = '2.10'
}

configurations.all {
    exclude group: "commons-logging", module: "commons-logging"
}

repositories {
    mavenCentral()
    maven { url 'http://download.oracle.com/maven' }
    mavenLocal()
}

dependencies {
    compile project(':connector-services')
    compile "org.springframework:spring-webmvc:$springVersion"
    compile "javax.servlet:jstl:$jstlVersion"
    compile "org.springframework.security:spring-security-web:$springSecurityVersion"
    compile "org.springframework.security:spring-security-config:$springSecurityVersion"
    compile "commons-fileupload:commons-fileupload:$fileupload"

    testCompile "org.springframework:spring-test:$springVersion"
    //exclude the build in hamcrest
    testCompile("junit:junit:$junitVersion") {
        exclude group: 'org.hamcrest'
    }
    testCompile "org.hamcrest:hamcrest-library:$hamcrestVersion"
    //include in compile only, exclude in the war
    providedCompile "javax.servlet:javax.servlet-api:$servletApiVersion"
}

war {
    archiveName = 'connector-web.war'
}

task undeploy(type: Delete) {
    delete tomcatDeployment + war.archiveName
}

// usage gradle connector-web:deploy -Denvironment=develop -Dtomcat.home=C:/temp/conector_empaquetado_web_v2/conector_empaquetado_web/apache-tomcat-8.5.23/webapps
task deploy(type: Copy) {
    from "$buildDir/libs/" + war.archiveName
    into tomcatDeployment
}

//Gretty
buildscript {
    repositories {
        jcenter()
    }

    dependencies {
        classpath 'org.akhikhl.gretty:gretty:+'
    }
}

gretty {
    httpPort = 8082
    contextPath = 'connector-web'
    servletContainer = 'jetty9' //jetty9
}

jacoco {
    toolVersion = "0.7.5+"
    reportsDir = file("$buildDir/reports/jacoco")
}

jacocoTestReport {
    reports {
        xml.enabled = true
        html.enabled = true
    }
}
