apply plugin: 'java'
apply plugin: 'war'
apply plugin: 'org.gretty'
apply plugin: 'idea'
apply plugin: 'jacoco' //code coverage

def tomcatHome = System.properties['tomcat.home']
def tomcatDeployment = tomcatHome + '/webapps'

def wildflyHome = System.properties['wildfly.home']
def wildflyDeployment = wildflyHome + '/standalone/deployments'

def junitVersion = "4.12"
def jstlVersion = "1.2"
def hamcrestVersion = "1.3"
def servletApiVersion = "3.1"
def fileupload = "1.3.3"

task wrapper(type: Wrapper) {
    gradleVersion = '2.10'
}

configurations.all {
    exclude group: "commons-logging", module: "commons-logging"
}

repositories {
    mavenCentral()
    maven { url 'http://download.oracle.com/maven' }
    mavenLocal()
}

dependencies {
    compile project(':connector-services')
    compile "org.springframework:spring-webmvc:$springVersion"
    compile "javax.servlet:jstl:$jstlVersion"
    compile "org.springframework.security:spring-security-web:$springSecurityVersion"
    compile "org.springframework.security:spring-security-config:$springSecurityVersion"
    compile "commons-fileupload:commons-fileupload:$fileupload"

    testCompile "org.springframework:spring-test:$springVersion"
    //exclude the build in hamcrest
    testCompile("junit:junit:$junitVersion") {
        exclude group: 'org.hamcrest'
    }
    testCompile "org.hamcrest:hamcrest-library:$hamcrestVersion"
    //include in compile only, exclude in the war
    providedCompile "javax.servlet:javax.servlet-api:$servletApiVersion"
}

war {
    archiveFileName = 'connector-web.war'
}


def filesToCopy = copySpec {
    from "$buildDir/libs/${war.archiveFileName.get()}"
}

// usage gradle connector-web:deploy -Denvironment=develop -Dtomcat.home=complete with tomcat location -Dwildfly.home=complete with wildfly location
task deploy(type: Copy) {
    [wildflyDeployment, tomcatDeployment].each { dest ->
        print("Copy $filesToCopy to $dest\n")
        copy {
            with filesToCopy
            into dest
        }
    }
}

// usage gradle connector-web:undeploy -Denvironment=develop -Dtomcat.home=complete with tomcat location -Dwildfly.home=complete with wildfly location
//task undeploy(type: Delete) {
//    [wildflyDeployment, tomcatDeployment].each { dest ->
//        def pathToFile = "$dest/${war.archiveFileName.get()}"
//        print("Delete $pathToFile\n")
//        delete pathToFile
//    }
//}


//Gretty
buildscript {
    repositories {
    maven {
      url = uri("https://plugins.gradle.org/m2/")
    }
  }

    dependencies {
        classpath 'gradle.plugin.org.gretty:gretty:3.0.1'
    }
}

gretty {
    httpPort = 8082
    contextPath = 'connector-web'
    servletContainer = 'jetty9' //jetty9
}

jacoco {
    toolVersion = "0.7.5+"
    reportsDir = file("$buildDir/reports/jacoco")
}

jacocoTestReport {
    reports {
        xml.enabled = true
        html.enabled = true
    }
}
