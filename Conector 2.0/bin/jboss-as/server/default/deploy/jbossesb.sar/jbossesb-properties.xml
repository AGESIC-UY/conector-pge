<?xml version="1.0" encoding="ISO-8859-1"?>
<!--
  JBoss, Home of Professional Open Source
  Copyright 2006, JBoss Inc., and others contributors as indicated 
  by the @authors tag. All rights reserved. 
  See the copyright.txt in the distribution for a
  full listing of individual contributors. 
  This copyrighted material is made available to anyone wishing to use,
  modify, copy, or redistribute it subject to the terms and conditions
  of the GNU Lesser General Public License, v. 2.1.
  This program is distributed in the hope that it will be useful, but WITHOUT A 
  WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A 
  PARTICULAR PURPOSE.  See the GNU Lesser General Public License for more details.
  You should have received a copy of the GNU Lesser General Public License,
  v.2.1 along with this distribution; if not, write to the Free Software
  Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, 
  MA  02110-1301, USA.
  
  (C) 2005-2006,
  @author JBoss Inc.
-->
<!-- $Id: jbossesb-unittest-properties.xml $ -->
<!--
  These options are described in the JBossESB manual.
  Defaults are provided here for convenience only.
 
  Please read through this file prior to using the system, and consider
  updating the specified entries.
-->
<esb
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:noNamespaceSchemaLocation="jbossesb-1_0.xsd">
    <properties name="core">
		<property name="org.jboss.soa.esb.jndi.server.context.factory" value="org.jnp.interfaces.NamingContextFactory"/>
		<property name="org.jboss.soa.esb.jndi.server.url" value="${jboss.esb.bind.address}:1099"/>
		<property name="org.jboss.soa.esb.persistence.connection.factory" 	value="org.jboss.internal.soa.esb.persistence.format.MessageStoreFactoryImpl"/>
        <property name="org.jboss.soa.esb.loadbalancer.policy" value="org.jboss.soa.esb.listeners.ha.RoundRobin"/>
        <property name="org.jboss.soa.esb.mime.text.types" value="text/*;application/xml;application/*+xml"/>
        <property name="jboss.esb.invm.scope.default" value="NONE"/>
    </properties>
    <properties name="security">
        <property name="org.jboss.soa.esb.services.security.implementationClass" value="org.jboss.internal.soa.esb.services.security.JaasSecurityService"/>
        <property name="org.jboss.soa.esb.services.security.callbackHandler" value="org.jboss.internal.soa.esb.services.security.UserPassCallbackHandler"/>
        
        <!-- Algorithm and key size for internal sealing of objects -->
        <property name="org.jboss.soa.esb.services.security.sealAlgorithm" value="TripleDES"/>
    	<property name="org.jboss.soa.esb.services.security.sealKeySize" value="168"/>
    	
        <!-- Timeout in milliseconds. After which the context is considered invalid -->
    	<property name="org.jboss.soa.esb.services.security.contextTimeout" value="30000"/>
    	<property name="org.jboss.soa.esb.services.security.contextPropagatorImplementationClass" value="org.jboss.internal.soa.esb.services.security.JBossASContextPropagator"/>

		<!-- Public keystore configuration used to hold keys for encryption/decryption -->
    	<property name="org.jboss.soa.esb.services.security.publicKeystore" value="/publicKeyStore"/>
    	<property name="org.jboss.soa.esb.services.security.publicKeystorePassword" value="testKeystorePassword"/>
    	<property name="org.jboss.soa.esb.services.security.publicKeyAlias" value="testAlias"/>
    	<property name="org.jboss.soa.esb.services.security.publicKeyPassword" value="testPassword"/>
		<property name="org.jboss.soa.esb.services.security.publicKeyTransformation" value="RSA/ECB/PKCS1Padding"/>

    </properties>
    <properties name="registry">
    	<property name="org.jboss.soa.esb.registry.queryManagerURI" value="org.apache.juddi.v3.client.transport.wrapper.UDDIInquiryService#inquire"/>
    	<property name="org.jboss.soa.esb.registry.lifeCycleManagerURI" value="org.apache.juddi.v3.client.transport.wrapper.UDDIPublicationService#publish"/>
	<property name="org.jboss.soa.esb.registry.securityManagerURI" value="org.apache.juddi.v3.client.transport.wrapper.UDDISecurityService#secure"/>
    	<property name="org.jboss.soa.esb.registry.implementationClass" value="org.jboss.internal.soa.esb.services.registry.JAXRRegistryImpl"/>
    	<property name="org.jboss.soa.esb.registry.factoryClass" value="org.apache.ws.scout.registry.ConnectionFactoryImpl"/>
    	<property name="org.jboss.soa.esb.registry.user" value="root"/>
    	<property name="org.jboss.soa.esb.registry.password" value="root"/>
    	<!-- the following parameter is scout specific to set the type of communication between scout and the UDDI (embedded, rmi, soap) -->
    	<property name="org.jboss.soa.esb.scout.proxy.transportClass" value="org.apache.ws.scout.transport.LocalTransport"/>
	<property name="org.jboss.soa.esb.scout.proxy.uddiVersion" value="3.0"/>
	<property name="org.jboss.soa.esb.scout.proxy.uddiNameSpace" value="urn:uddi-org:api_v3"/>

        <!-- specify the interceptors, in order -->
        <property name="org.jboss.soa.esb.registry.interceptors"
                value="org.jboss.internal.soa.esb.services.registry.InVMRegistryInterceptor, org.jboss.internal.soa.esb.services.registry.CachingRegistryInterceptor"/>

        <!-- The following properties modify the cache interceptor behaviour -->
        <property name="org.jboss.soa.esb.registry.cache.maxSize" value="100"/>
        <!-- If the validityPeriod is not specified then it will default to the same value as org.jboss.soa.esb.registry.cache.life
        <property name="org.jboss.soa.esb.registry.cache.validityPeriod" value="600000"/>
        -->

        <!-- Organization Category to be used by this deployment. -->
        <property name="org.jboss.soa.esb.registry.orgCategory" value="org.jboss.soa.esb.:category"/>
    </properties>
    <properties name="transports" depends="core">
    	<property name="org.jboss.soa.esb.mail.smtp.host" value="localhost"/>
    	<property name="org.jboss.soa.esb.mail.smtp.user" value="jbossesb"/>
    	<property name="org.jboss.soa.esb.mail.smtp.password" value=""/>
    	<property name="org.jboss.soa.esb.mail.smtp.port" value="25"/>
    	<property name="org.jboss.soa.esb.mail.smtp.auth" value="true"/>
    	<property name="org.jboss.soa.esb.ftp.localdir" value="/tmp"/>
    	<property name="org.jboss.soa.esb.ftp.remotedir" value="/tmp"/>
		<!-- Coarse-grained ftp timeout property in milliseconds (0 = infinite). The fine-grained properties below will default to this value if not set. See FtpUtils javadoc for more info. -->
    	<property name="org.jboss.soa.esb.ftp.timeout" value="0"/>
		<!-- Fine-grained ftp timeout property which sets the default timeout to use when opening a socket. Not to be confused with timeout.so which operates on the currently opened socket. -->
    	<!-- property name="org.jboss.soa.esb.ftp.timeout.default" value="0"/ -->
		<!-- Fine-grained ftp timeout property which sets the timeout to use when reading from the data connection. -->
    	<!-- property name="org.jboss.soa.esb.ftp.timeout.data" value="0"/ -->
		<!-- Fine-grained ftp timeout property which sets the timeout of a currently open connection.-->
    	<!-- property name="org.jboss.soa.esb.ftp.timeout.so" value="0"/ -->
    	<property name="org.jboss.soa.esb.jms.connectionPool" value="20"/>
    	<property name="org.jboss.soa.esb.jms.sessionSleep" value="30"/>
    	<!-- expiry of messages to temporary invm destinations (default replies)
    	     expire after the following timeout, specified in milliseconds (5 mins) -->
    	<property name="org.jboss.soa.esb.invm.expiryTime" value="300000"/>
    	
    	<!--  Uncomment this to return stack traces when exposing an ESB service through WS
    	<property name="org.jboss.soa.esb.ws.returnStackTrace" value="true"/>
    	-->
    	<!--  Uncomment this to specify the WS response timeout when exposing an ESB service through WS
    	<property name="org.jboss.soa.esb.ws.timeout" value="30000"/>
    	-->
    	<property name="org.jboss.soa.esb.aggregator.setOnProperties" value="false"/>
    </properties>
    <properties name="connection">
    	<property name="min-pool-size" value="5"/>
    	<property name="max-pool-size" value="10"/>
    	<property name="blocking-timeout-millis" value="5000"/>
    	<property name="abandoned-connection-timeout" value="10000"/>
    	<property name="abandoned-connection-time-interval" value="30000"/>
    </properties>
    <properties name="jca">
        <property name="org.jboss.soa.esb.jca.activation.mapper.jms-ra.rar" value="org.jboss.soa.esb.listeners.jca.JBossActivationMapper"/>
        <property name="org.jboss.soa.esb.jca.activation.mapper.wmq.jmsra.rar" value="org.jboss.soa.esb.listeners.jca.WMQActivationMapper"/>
    </properties>

    <properties name="dbstore">
    	
    	<!--  connection manager type -->
	    <!-- <property name="org.jboss.soa.esb.persistence.db.conn.manager" 		value="org.jboss.internal.soa.esb.persistence.manager.StandaloneConnectionManager"/>	 -->    
	     <property name="org.jboss.soa.esb.persistence.db.conn.manager" value="org.jboss.internal.soa.esb.persistence.manager.J2eeConnectionManager"/>
	    
	    <!-- this property is only used if using the j2ee connection manager -->
	    <property name="org.jboss.soa.esb.persistence.db.datasource.name" 	value="java:/JBossESBDS"/>
		
		<!-- standalone connection pooling settings -->
		<property name="org.jboss.soa.esb.persistence.db.connection.url" 	value="jdbc:hsqldb:hsql://localhost:9001/"/>
		<property name="org.jboss.soa.esb.persistence.db.jdbc.driver" 		value="org.hsqldb.jdbcDriver"/>
		<property name="org.jboss.soa.esb.persistence.db.user" 				value="sa"/>
		<property name="org.jboss.soa.esb.persistence.db.pwd" 				value=""/>		
		<property name="org.jboss.soa.esb.persistence.db.pool.initial.size"	value="2"/>
		<property name="org.jboss.soa.esb.persistence.db.pool.min.size"		value="2"/>
		<property name="org.jboss.soa.esb.persistence.db.pool.max.size"		value="5"/>
		<!--table managed by pool to test for valid connections - created by pool automatically -->
		<property name="org.jboss.soa.esb.persistence.db.pool.test.table"	value="pooltest"/>		
		<property name="org.jboss.soa.esb.persistence.db.pool.timeout.millis"	value="5000"/> 
		
    </properties>    
    <properties name="filters">
    	<property name="org.jboss.soa.esb.filter.1" value="org.jboss.internal.soa.esb.message.filter.MetaDataFilter"/>
    	<!-- property name="org.jboss.soa.esb.filter.#" value="org.jboss.internal.soa.esb.message.filter.EntryExitTimeFilter"/ -->
    	<property name="org.jboss.soa.esb.filter.2" value="org.jboss.internal.soa.esb.message.filter.GatewayFilter"/>
    </properties>

    <properties name="rules">
    	<!-- change this to true if you wish to have the same behaviour as ESB4.6 and prior (including SOA 4.3) -->
    	<property name="org.jboss.soa.esb.services.rules.continueState" value="false"/>
		<!-- drools.resource.scanner.interval (used to be at the agent level as "poll") -->
		<property name="org.jboss.soa.esb.services.rules.resource.scanner.interval" value="60"/>
    </properties>
</esb>
